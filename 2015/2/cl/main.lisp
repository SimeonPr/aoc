(ql:quickload :cl-ppcre)
(defun extract-numbers (string)
  (let* ((tokens (cl-ppcre:split #\x string))
         (numbers (mapcar #'parse-integer tokens)))
    (sort numbers #'<)))

(defun calculate-area (numbers)
  (+ (* 2 (+ (* (nth 0 numbers)
		(nth 1 numbers))
	     (* (nth 0 numbers)
		(nth 2 numbers))
	     (* (nth 1 numbers)
		(nth 2 numbers))))
     (* (nth 0 numbers)
	(nth 1 numbers))))

(defun calculate-ribbon (numbers)
  (+ (* 2 (+ (nth 0 numbers)
	     (nth 1 numbers)))
     (reduce #'* numbers :initial-value 1)))

(let ((area 0)
      (ribbon 0))
  (with-open-file (in "../input.txt")
    (loop for line = (read-line in nil nil)
	  while line
	  do (let ((numbers (extract-numbers line)))
	       (incf area (calculate-area numbers))
	       (incf ribbon (calculate-ribbon numbers)))))
  (format t "The total area is ~a~%The total ribbon length is ~a~%" area ribbon))
