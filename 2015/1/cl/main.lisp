(with-open-file (in "../input.txt")
  (let ((str (read-line in))
	(floor 0)
	(idx 0)
	(entered-p nil))
    (map nil #'(lambda (c)
		 (cond ((eq c #\() (incf floor))
		       ((eq c #\)) (decf floor))
		       (t t))
		 (incf idx)
		 (if (and (= floor -1) (not entered-p))
		     (progn
		       (format t "Basement entered at index ~a~%" idx)
		       (setf entered-p t))))
	 str)
    (format t "Final floor at ~a~%" floor)))
